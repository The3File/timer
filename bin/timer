#!/usr/bin/env bash
# a timer for measuring time - written in pure bash
# https://github.com/the3file

basename="${0##*/}"
clean_exit(){ [[ $b ]] && kill $b; printf '\e[?25h'; }

usage(){ 
	printf '%s\n' "$basename: $1: invalid argument"\
		"usage: $basename [<hrs|mins|secs>{h|m|s}] [[<hrs>:]<mins>:<secs>]"
}

notify_complete(){
	printf '\r\e[K%s\e[m\n' "times up!"; notify-send "$basename: $_"
	hash paplay &>/dev/null && pa_play
	for i in {0..3};{ read -st .15 -p $'\a';}
}

pa_play(){
	s="/usr/share/sounds/freedesktop/stereo/alarm-clock-elapsed.oga"
	while wait; do trap 'kill -9 $p' EXIT; paplay $s & p=$!; done & b=$!
	read -rs; exit 0
}


print_time(){
	printf '\e[K\e[?25l\e[1m\r%02d:%02d:%02d' "$((s/3600))" "$((s/60%60))" "$((s%60))"
}

parse_colons(){
	IFS=: read -rd '' ch cm cs < <(printf '%(%-H:%-M:%-S)T' "-1")
	m="${1##*:}"; h="${1%%:$m}"; m=${m#0}; h=${h#0}
	((h=h<12?h+24:h,h=m<cm?h-1:h,m=m<cm?60-cm+m:m-cm))
	((c=(60-cs+m*60+h*3600)-(cs+cm*60+ch<12?ch+24:ch*3600)))
}

case_opts(){
	case $1 in
		[0-9][0-9]':'[0-9][0-9]) parse_colons "$1" ;;
		*[0-9]'h') ((c+=${1%h}*3600)) ;;
		*[0-9]'m') ((c+=${1%m}*60)) ;;
		*[0-9]'s') ((c+=${1%s})) ;;
		*) usage "$1"; exit 1 ;;
	esac
}

main(){
	trap 'clean_exit' EXIT
	while [ $1 ]; do case_opts "$1"; shift; done
	for ((st=SECONDS,s=c;s>=0;t=SECONDS,s=c?c-(t-st):t-st)){ print_time; read -st 1;}
	notify_complete
}

main "$@"
